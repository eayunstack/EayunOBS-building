From d61a7dca0b1f55c1fadaeb630281bee558a50a42 Mon Sep 17 00:00:00 2001
From: Zhao Chao <zhaochao1984@gmail.com>
Date: Wed, 30 Mar 2016 14:41:45 +0800
Subject: [PATCH 18/21] eayunrgw: clean load balance init procejure.

1. no need to check haproxy status as it's now a pacemaker resource.
2. add default pacemaker resource stickiness to avoid unexpeted
   migration.

Signed-off-by: Zhao Chao <zhaochao1984@gmail.com>
---
 ceph_deploy/eayunrgw.py | 58 +++++++++++++++++++++++++++++++++----------------
 1 file changed, 39 insertions(+), 19 deletions(-)

diff --git a/ceph_deploy/eayunrgw.py b/ceph_deploy/eayunrgw.py
index 3aa4f89..7cb1cfd 100644
--- a/ceph_deploy/eayunrgw.py
+++ b/ceph_deploy/eayunrgw.py
@@ -469,7 +469,6 @@ def create_haproxy_conf(hosts_list, vip, vport):
 
     haproxy_peers = ''
     haproxy_servers = HAPROXY_ENDS_CONTECT % (vip, vport)
-
     for host in hosts_list:
         haproxy_peers +='\n'
         haproxy_peers += HAPROXY_PEER_CONTECT % {'host': host}
@@ -517,6 +516,29 @@ def init_pcs_cluster(hosts_list, vip, vip_cidr, hauser, hapass):
     if ret != 0:
         raise exc.GenericError('Failed to initialize PCS cluster: setup\n')
 
+    init_host_join = False
+    retries = 0
+    while retries <= 5:
+        LOG.debug('Checking the first node(%s) getting online' % pcs_init_host)
+
+        if check_host_in_pcs(pcs_init_host, conn=conn):
+            init_host_join = True
+            break
+        else:
+            retries += 1
+
+        time.sleep(10)
+
+    if not init_host_join:
+        LOG.error('Fist node %s not joining in 60s on %s, you should check'
+                  ' mannually.' % pcs_init_host)
+        remoto.process.run(
+            conn,
+            [ 'pcs', 'cluster', 'destroy', '--all' ]
+        )
+        raise exc.GenericError('Failed to initialize PCS cluster: the first'
+                               'node not joining in time.\n')
+
     remoto.process.run(
         conn,
         [
@@ -536,6 +558,14 @@ def init_pcs_cluster(hosts_list, vip, vip_cidr, hauser, hapass):
     remoto.process.run(
         conn,
         [
+            'pcs', 'resource', 'defaults',
+            'resource-stickiness=100'
+        ]
+    )
+
+    remoto.process.run(
+        conn,
+        [
             'pcs', 'resource', 'create',
             'p_haproxy', 'systemd:haproxy',
             'op', 'monitor', 'interval=5s',
@@ -581,10 +611,12 @@ def init_pcs_cluster(hosts_list, vip, vip_cidr, hauser, hapass):
         ]
     )
 
-def check_host_in_pcs(host, existed_hosts):
-    op_host = existed_hosts[0]
-    distro = hosts.get(op_host)
-    conn = distro.conn
+def check_host_in_pcs(host, existed_hosts=None, conn=None):
+    if not conn:
+        op_host = existed_hosts[0]
+        distro = hosts.get(op_host)
+        conn = distro.conn
+
     host_in_pcs = False
 
     (out, _, _) = remoto.process.check(
@@ -708,18 +740,6 @@ def eayunrgw_lb_init(args):
 
     create_haproxy_conf(hosts_list, vip, vport)
 
-    for host in hosts_list:
-        distro = hosts.get(host, username=args.username)
-        conn = distro.conn
-        remoto.process.run(
-            conn,
-            ['systemctl', 'enable', 'haproxy']
-        )
-        remoto.process.run(
-            conn,
-            ['systemctl', 'start', 'haproxy']
-        )
-
     init_pcs_cluster(hosts_list, vip, vip_cidr, hauser, hapass)
 
 def eayunrgw_lb_extend(args):
@@ -732,7 +752,7 @@ def eayunrgw_lb_extend(args):
 
     existed_hosts = [h for h in hosts_list if h != new_host]
 
-    if check_host_in_pcs(new_host, existed_hosts):
+    if check_host_in_pcs(new_host, existed_hosts=existed_hosts):
         LOG.info('%s already in EayunOBS loadbalance cluster!' % new_host)
         return
 
@@ -754,7 +774,7 @@ def eayunrgw_lb_extend(args):
 
     haproxy_started_on_new_host = 0
     retries = 0
-    while retries <= 6:
+    while retries <= 5:
         LOG.debug('Checking HAProxy starting on new node: %s' % new_host)
         distro = hosts.get(new_host)
         conn = distro.conn
-- 
2.8.0.rc3

